"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.encryptV2 = exports.decryptV2 = exports.encryptV1 = exports.decryptV1 = void 0;
const crypto_1 = require("../crypto");
const decryptV1 = async (myKeys, peerKeys, ciphertext, headerBytes, isSender) => {
    const secret = await myKeys.sharedSecret(peerKeys, myKeys.getCurrentPreKey().publicKey, // assumes that the current preKey is what was used to encrypt
    !isSender);
    return (0, crypto_1.decrypt)(ciphertext, secret, headerBytes);
};
exports.decryptV1 = decryptV1;
const encryptV1 = async (keys, recipient, message, headerBytes) => {
    const secret = await keys.sharedSecret(recipient, keys.getCurrentPreKey().publicKey, false // assumes that the sender is the party doing the encrypting
    );
    return (0, crypto_1.encrypt)(message, secret, headerBytes);
};
exports.encryptV1 = encryptV1;
const decryptV2 = (ciphertext, secret, headerBytes) => (0, crypto_1.decrypt)(ciphertext, secret, headerBytes);
exports.decryptV2 = decryptV2;
const encryptV2 = (payload, secret, headerBytes) => (0, crypto_1.encrypt)(payload, secret, headerBytes);
exports.encryptV2 = encryptV2;
//# sourceMappingURL=encryption.js.map