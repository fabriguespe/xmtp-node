"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.PreparedMessage = void 0;
const utils_1 = require("./crypto/utils");
const encryption_1 = require("./crypto/encryption");
class PreparedMessage {
    constructor(messageEnvelope, onSend) {
        this.messageEnvelope = messageEnvelope;
        this.onSend = onSend;
    }
    messageID() {
        return __awaiter(this, void 0, void 0, function* () {
            if (!this.messageEnvelope.message) {
                throw new Error('no envelope message');
            }
            return (0, utils_1.bytesToHex)(yield (0, encryption_1.sha256)(this.messageEnvelope.message));
        });
    }
    send() {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.onSend();
        });
    }
}
exports.PreparedMessage = PreparedMessage;
//# sourceMappingURL=PreparedMessage.js.map