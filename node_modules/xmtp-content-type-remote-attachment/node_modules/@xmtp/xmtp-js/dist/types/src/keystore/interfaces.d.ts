import { keystore, publicKey } from '@xmtp/proto';
import { WithoutUndefined } from './utils';
export interface Keystore {
    decryptV1(req: keystore.DecryptV1Request): Promise<keystore.DecryptResponse>;
    decryptV2(req: keystore.DecryptV2Request): Promise<keystore.DecryptResponse>;
    encryptV1(req: keystore.EncryptV1Request): Promise<keystore.EncryptResponse>;
    encryptV2(req: keystore.EncryptV2Request): Promise<keystore.EncryptResponse>;
    saveInvites(req: keystore.SaveInvitesRequest): Promise<keystore.SaveInvitesResponse>;
    createInvite(req: keystore.CreateInviteRequest): Promise<keystore.CreateInviteResponse>;
    getV2Conversations(): Promise<keystore.ConversationReference[]>;
    getPublicKeyBundle(): Promise<publicKey.SignedPublicKeyBundle>;
    getAccountAddress(): Promise<string>;
}
export declare type TopicData = WithoutUndefined<keystore.TopicMap_TopicData>;
